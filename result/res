100%
src
6. try
7. {
8.     int byteCount = System.in.read( inputBuffer );
9.     if( byteCount <= 0 )
10.     {
11.       return;
12.     }
13.     int i = 1;
14.     switch ( i )
15.     {
16.         case 1:
17.             String s = new String( inputBuffer );
18.             s = s.substring( 0, byteCount-2 );		    
19.             if( ( s.equals( "admin" ) ) == true )
20.             {
21.                 highlevel_authorized( s );
22.             }
23.         default:
24.             break;
25.     }
26. }
27. catch ( IOException e )
28. {
29.     final Logger logger = Logger.getAnonymousLogger();
30.     String exception = "Exception " + e;
31.     logger.warning( exception );
32. }
dst
6. try
7. {
8.     int byteCount = System.in.read( inputBuffer );
9.     if( byteCount <= 0 )
10.     {
11.       return;
12.     }
13.     int i = 1;
14.     switch ( i )
15.     {
16.         case 1:
17.             String s = new String( inputBuffer );
18.             s = s.substring( 0, byteCount-2 );		    
19.             if( ( s.equals( "admin" ) ) == true )
20.             {
21.                 highlevel_authorized( s );
22.             }
23.         default:
24.             break;
25.     }
26. }
27. catch ( IOException e )
28. {
29.     final Logger logger = Logger.getAnonymousLogger();
30.     String exception = "Exception " + e;
31.     logger.warning( exception );
32. }
